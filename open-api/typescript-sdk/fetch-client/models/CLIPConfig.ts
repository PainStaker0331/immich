/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CLIPMode } from './CLIPMode';
import {
    CLIPModeFromJSON,
    CLIPModeFromJSONTyped,
    CLIPModeToJSON,
} from './CLIPMode';
import type { ModelType } from './ModelType';
import {
    ModelTypeFromJSON,
    ModelTypeFromJSONTyped,
    ModelTypeToJSON,
} from './ModelType';

/**
 * 
 * @export
 * @interface CLIPConfig
 */
export interface CLIPConfig {
    /**
     * 
     * @type {boolean}
     * @memberof CLIPConfig
     */
    enabled: boolean;
    /**
     * 
     * @type {CLIPMode}
     * @memberof CLIPConfig
     */
    mode?: CLIPMode;
    /**
     * 
     * @type {string}
     * @memberof CLIPConfig
     */
    modelName: string;
    /**
     * 
     * @type {ModelType}
     * @memberof CLIPConfig
     */
    modelType?: ModelType;
}

/**
 * Check if a given object implements the CLIPConfig interface.
 */
export function instanceOfCLIPConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "enabled" in value;
    isInstance = isInstance && "modelName" in value;

    return isInstance;
}

export function CLIPConfigFromJSON(json: any): CLIPConfig {
    return CLIPConfigFromJSONTyped(json, false);
}

export function CLIPConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CLIPConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'mode': !exists(json, 'mode') ? undefined : CLIPModeFromJSON(json['mode']),
        'modelName': json['modelName'],
        'modelType': !exists(json, 'modelType') ? undefined : ModelTypeFromJSON(json['modelType']),
    };
}

export function CLIPConfigToJSON(value?: CLIPConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'enabled': value.enabled,
        'mode': CLIPModeToJSON(value.mode),
        'modelName': value.modelName,
        'modelType': ModelTypeToJSON(value.modelType),
    };
}

