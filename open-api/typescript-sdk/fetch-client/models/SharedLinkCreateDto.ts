/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SharedLinkType } from './SharedLinkType';
import {
    SharedLinkTypeFromJSON,
    SharedLinkTypeFromJSONTyped,
    SharedLinkTypeToJSON,
} from './SharedLinkType';

/**
 * 
 * @export
 * @interface SharedLinkCreateDto
 */
export interface SharedLinkCreateDto {
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    albumId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    allowDownload?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    allowUpload?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof SharedLinkCreateDto
     */
    assetIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof SharedLinkCreateDto
     */
    expiresAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkCreateDto
     */
    password?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkCreateDto
     */
    showMetadata?: boolean;
    /**
     * 
     * @type {SharedLinkType}
     * @memberof SharedLinkCreateDto
     */
    type: SharedLinkType;
}

/**
 * Check if a given object implements the SharedLinkCreateDto interface.
 */
export function instanceOfSharedLinkCreateDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function SharedLinkCreateDtoFromJSON(json: any): SharedLinkCreateDto {
    return SharedLinkCreateDtoFromJSONTyped(json, false);
}

export function SharedLinkCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedLinkCreateDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'albumId': !exists(json, 'albumId') ? undefined : json['albumId'],
        'allowDownload': !exists(json, 'allowDownload') ? undefined : json['allowDownload'],
        'allowUpload': !exists(json, 'allowUpload') ? undefined : json['allowUpload'],
        'assetIds': !exists(json, 'assetIds') ? undefined : json['assetIds'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (json['expiresAt'] === null ? null : new Date(json['expiresAt'])),
        'password': !exists(json, 'password') ? undefined : json['password'],
        'showMetadata': !exists(json, 'showMetadata') ? undefined : json['showMetadata'],
        'type': SharedLinkTypeFromJSON(json['type']),
    };
}

export function SharedLinkCreateDtoToJSON(value?: SharedLinkCreateDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'albumId': value.albumId,
        'allowDownload': value.allowDownload,
        'allowUpload': value.allowUpload,
        'assetIds': value.assetIds,
        'description': value.description,
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt === null ? null : value.expiresAt.toISOString()),
        'password': value.password,
        'showMetadata': value.showMetadata,
        'type': SharedLinkTypeToJSON(value.type),
    };
}

