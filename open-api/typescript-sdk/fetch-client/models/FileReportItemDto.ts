/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PathEntityType } from './PathEntityType';
import {
    PathEntityTypeFromJSON,
    PathEntityTypeFromJSONTyped,
    PathEntityTypeToJSON,
} from './PathEntityType';
import type { PathType } from './PathType';
import {
    PathTypeFromJSON,
    PathTypeFromJSONTyped,
    PathTypeToJSON,
} from './PathType';

/**
 * 
 * @export
 * @interface FileReportItemDto
 */
export interface FileReportItemDto {
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    checksum?: string;
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    entityId: string;
    /**
     * 
     * @type {PathEntityType}
     * @memberof FileReportItemDto
     */
    entityType: PathEntityType;
    /**
     * 
     * @type {PathType}
     * @memberof FileReportItemDto
     */
    pathType: PathType;
    /**
     * 
     * @type {string}
     * @memberof FileReportItemDto
     */
    pathValue: string;
}

/**
 * Check if a given object implements the FileReportItemDto interface.
 */
export function instanceOfFileReportItemDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "entityId" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "pathType" in value;
    isInstance = isInstance && "pathValue" in value;

    return isInstance;
}

export function FileReportItemDtoFromJSON(json: any): FileReportItemDto {
    return FileReportItemDtoFromJSONTyped(json, false);
}

export function FileReportItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileReportItemDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checksum': !exists(json, 'checksum') ? undefined : json['checksum'],
        'entityId': json['entityId'],
        'entityType': PathEntityTypeFromJSON(json['entityType']),
        'pathType': PathTypeFromJSON(json['pathType']),
        'pathValue': json['pathValue'],
    };
}

export function FileReportItemDtoToJSON(value?: FileReportItemDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checksum': value.checksum,
        'entityId': value.entityId,
        'entityType': PathEntityTypeToJSON(value.entityType),
        'pathType': PathTypeToJSON(value.pathType),
        'pathValue': value.pathValue,
    };
}

