/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonResponseDto } from './PersonResponseDto';
import {
    PersonResponseDtoFromJSON,
    PersonResponseDtoFromJSONTyped,
    PersonResponseDtoToJSON,
} from './PersonResponseDto';

/**
 * 
 * @export
 * @interface AssetFaceResponseDto
 */
export interface AssetFaceResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    boundingBoxX1: number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    boundingBoxX2: number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    boundingBoxY1: number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    boundingBoxY2: number;
    /**
     * 
     * @type {string}
     * @memberof AssetFaceResponseDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    imageHeight: number;
    /**
     * 
     * @type {number}
     * @memberof AssetFaceResponseDto
     */
    imageWidth: number;
    /**
     * 
     * @type {PersonResponseDto}
     * @memberof AssetFaceResponseDto
     */
    person: PersonResponseDto | null;
}

/**
 * Check if a given object implements the AssetFaceResponseDto interface.
 */
export function instanceOfAssetFaceResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "boundingBoxX1" in value;
    isInstance = isInstance && "boundingBoxX2" in value;
    isInstance = isInstance && "boundingBoxY1" in value;
    isInstance = isInstance && "boundingBoxY2" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "imageHeight" in value;
    isInstance = isInstance && "imageWidth" in value;
    isInstance = isInstance && "person" in value;

    return isInstance;
}

export function AssetFaceResponseDtoFromJSON(json: any): AssetFaceResponseDto {
    return AssetFaceResponseDtoFromJSONTyped(json, false);
}

export function AssetFaceResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetFaceResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'boundingBoxX1': json['boundingBoxX1'],
        'boundingBoxX2': json['boundingBoxX2'],
        'boundingBoxY1': json['boundingBoxY1'],
        'boundingBoxY2': json['boundingBoxY2'],
        'id': json['id'],
        'imageHeight': json['imageHeight'],
        'imageWidth': json['imageWidth'],
        'person': PersonResponseDtoFromJSON(json['person']),
    };
}

export function AssetFaceResponseDtoToJSON(value?: AssetFaceResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'boundingBoxX1': value.boundingBoxX1,
        'boundingBoxX2': value.boundingBoxX2,
        'boundingBoxY1': value.boundingBoxY1,
        'boundingBoxY2': value.boundingBoxY2,
        'id': value.id,
        'imageHeight': value.imageHeight,
        'imageWidth': value.imageWidth,
        'person': PersonResponseDtoToJSON(value.person),
    };
}

