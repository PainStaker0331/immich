/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LibraryType } from './LibraryType';
import {
    LibraryTypeFromJSON,
    LibraryTypeFromJSONTyped,
    LibraryTypeToJSON,
} from './LibraryType';

/**
 * 
 * @export
 * @interface LibraryResponseDto
 */
export interface LibraryResponseDto {
    /**
     * 
     * @type {number}
     * @memberof LibraryResponseDto
     */
    assetCount: number;
    /**
     * 
     * @type {Date}
     * @memberof LibraryResponseDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryResponseDto
     */
    exclusionPatterns: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    id: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryResponseDto
     */
    importPaths: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof LibraryResponseDto
     */
    ownerId: string;
    /**
     * 
     * @type {Date}
     * @memberof LibraryResponseDto
     */
    refreshedAt: Date | null;
    /**
     * 
     * @type {LibraryType}
     * @memberof LibraryResponseDto
     */
    type: LibraryType;
    /**
     * 
     * @type {Date}
     * @memberof LibraryResponseDto
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the LibraryResponseDto interface.
 */
export function instanceOfLibraryResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "assetCount" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "exclusionPatterns" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "importPaths" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "ownerId" in value;
    isInstance = isInstance && "refreshedAt" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function LibraryResponseDtoFromJSON(json: any): LibraryResponseDto {
    return LibraryResponseDtoFromJSONTyped(json, false);
}

export function LibraryResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assetCount': json['assetCount'],
        'createdAt': (new Date(json['createdAt'])),
        'exclusionPatterns': json['exclusionPatterns'],
        'id': json['id'],
        'importPaths': json['importPaths'],
        'name': json['name'],
        'ownerId': json['ownerId'],
        'refreshedAt': (json['refreshedAt'] === null ? null : new Date(json['refreshedAt'])),
        'type': LibraryTypeFromJSON(json['type']),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function LibraryResponseDtoToJSON(value?: LibraryResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assetCount': value.assetCount,
        'createdAt': (value.createdAt.toISOString()),
        'exclusionPatterns': value.exclusionPatterns,
        'id': value.id,
        'importPaths': value.importPaths,
        'name': value.name,
        'ownerId': value.ownerId,
        'refreshedAt': (value.refreshedAt === null ? null : value.refreshedAt.toISOString()),
        'type': LibraryTypeToJSON(value.type),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}

