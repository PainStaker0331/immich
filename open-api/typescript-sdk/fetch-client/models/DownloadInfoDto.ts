/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DownloadInfoDto
 */
export interface DownloadInfoDto {
    /**
     * 
     * @type {string}
     * @memberof DownloadInfoDto
     */
    albumId?: string;
    /**
     * 
     * @type {number}
     * @memberof DownloadInfoDto
     */
    archiveSize?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof DownloadInfoDto
     */
    assetIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DownloadInfoDto
     */
    userId?: string;
}

/**
 * Check if a given object implements the DownloadInfoDto interface.
 */
export function instanceOfDownloadInfoDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DownloadInfoDtoFromJSON(json: any): DownloadInfoDto {
    return DownloadInfoDtoFromJSONTyped(json, false);
}

export function DownloadInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadInfoDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'albumId': !exists(json, 'albumId') ? undefined : json['albumId'],
        'archiveSize': !exists(json, 'archiveSize') ? undefined : json['archiveSize'],
        'assetIds': !exists(json, 'assetIds') ? undefined : json['assetIds'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function DownloadInfoDtoToJSON(value?: DownloadInfoDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'albumId': value.albumId,
        'archiveSize': value.archiveSize,
        'assetIds': value.assetIds,
        'userId': value.userId,
    };
}

