/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AlbumResponseDto } from './AlbumResponseDto';
import {
    AlbumResponseDtoFromJSON,
    AlbumResponseDtoFromJSONTyped,
    AlbumResponseDtoToJSON,
} from './AlbumResponseDto';
import type { AssetResponseDto } from './AssetResponseDto';
import {
    AssetResponseDtoFromJSON,
    AssetResponseDtoFromJSONTyped,
    AssetResponseDtoToJSON,
} from './AssetResponseDto';
import type { SharedLinkType } from './SharedLinkType';
import {
    SharedLinkTypeFromJSON,
    SharedLinkTypeFromJSONTyped,
    SharedLinkTypeToJSON,
} from './SharedLinkType';

/**
 * 
 * @export
 * @interface SharedLinkResponseDto
 */
export interface SharedLinkResponseDto {
    /**
     * 
     * @type {AlbumResponseDto}
     * @memberof SharedLinkResponseDto
     */
    album?: AlbumResponseDto;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    allowDownload: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    allowUpload: boolean;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof SharedLinkResponseDto
     */
    assets: Array<AssetResponseDto>;
    /**
     * 
     * @type {Date}
     * @memberof SharedLinkResponseDto
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    description: string | null;
    /**
     * 
     * @type {Date}
     * @memberof SharedLinkResponseDto
     */
    expiresAt: Date | null;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    password: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SharedLinkResponseDto
     */
    showMetadata: boolean;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    token?: string | null;
    /**
     * 
     * @type {SharedLinkType}
     * @memberof SharedLinkResponseDto
     */
    type: SharedLinkType;
    /**
     * 
     * @type {string}
     * @memberof SharedLinkResponseDto
     */
    userId: string;
}

/**
 * Check if a given object implements the SharedLinkResponseDto interface.
 */
export function instanceOfSharedLinkResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "allowDownload" in value;
    isInstance = isInstance && "allowUpload" in value;
    isInstance = isInstance && "assets" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "expiresAt" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "showMetadata" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function SharedLinkResponseDtoFromJSON(json: any): SharedLinkResponseDto {
    return SharedLinkResponseDtoFromJSONTyped(json, false);
}

export function SharedLinkResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedLinkResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'album': !exists(json, 'album') ? undefined : AlbumResponseDtoFromJSON(json['album']),
        'allowDownload': json['allowDownload'],
        'allowUpload': json['allowUpload'],
        'assets': ((json['assets'] as Array<any>).map(AssetResponseDtoFromJSON)),
        'createdAt': (new Date(json['createdAt'])),
        'description': json['description'],
        'expiresAt': (json['expiresAt'] === null ? null : new Date(json['expiresAt'])),
        'id': json['id'],
        'key': json['key'],
        'password': json['password'],
        'showMetadata': json['showMetadata'],
        'token': !exists(json, 'token') ? undefined : json['token'],
        'type': SharedLinkTypeFromJSON(json['type']),
        'userId': json['userId'],
    };
}

export function SharedLinkResponseDtoToJSON(value?: SharedLinkResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'album': AlbumResponseDtoToJSON(value.album),
        'allowDownload': value.allowDownload,
        'allowUpload': value.allowUpload,
        'assets': ((value.assets as Array<any>).map(AssetResponseDtoToJSON)),
        'createdAt': (value.createdAt.toISOString()),
        'description': value.description,
        'expiresAt': (value.expiresAt === null ? null : value.expiresAt.toISOString()),
        'id': value.id,
        'key': value.key,
        'password': value.password,
        'showMetadata': value.showMetadata,
        'token': value.token,
        'type': SharedLinkTypeToJSON(value.type),
        'userId': value.userId,
    };
}

