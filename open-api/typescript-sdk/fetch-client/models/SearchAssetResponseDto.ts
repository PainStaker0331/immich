/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssetResponseDto } from './AssetResponseDto';
import {
    AssetResponseDtoFromJSON,
    AssetResponseDtoFromJSONTyped,
    AssetResponseDtoToJSON,
} from './AssetResponseDto';
import type { SearchFacetResponseDto } from './SearchFacetResponseDto';
import {
    SearchFacetResponseDtoFromJSON,
    SearchFacetResponseDtoFromJSONTyped,
    SearchFacetResponseDtoToJSON,
} from './SearchFacetResponseDto';

/**
 * 
 * @export
 * @interface SearchAssetResponseDto
 */
export interface SearchAssetResponseDto {
    /**
     * 
     * @type {number}
     * @memberof SearchAssetResponseDto
     */
    count: number;
    /**
     * 
     * @type {Array<SearchFacetResponseDto>}
     * @memberof SearchAssetResponseDto
     */
    facets: Array<SearchFacetResponseDto>;
    /**
     * 
     * @type {Array<AssetResponseDto>}
     * @memberof SearchAssetResponseDto
     */
    items: Array<AssetResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof SearchAssetResponseDto
     */
    total: number;
}

/**
 * Check if a given object implements the SearchAssetResponseDto interface.
 */
export function instanceOfSearchAssetResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "facets" in value;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "total" in value;

    return isInstance;
}

export function SearchAssetResponseDtoFromJSON(json: any): SearchAssetResponseDto {
    return SearchAssetResponseDtoFromJSONTyped(json, false);
}

export function SearchAssetResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchAssetResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'facets': ((json['facets'] as Array<any>).map(SearchFacetResponseDtoFromJSON)),
        'items': ((json['items'] as Array<any>).map(AssetResponseDtoFromJSON)),
        'total': json['total'],
    };
}

export function SearchAssetResponseDtoToJSON(value?: SearchAssetResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'facets': ((value.facets as Array<any>).map(SearchFacetResponseDtoToJSON)),
        'items': ((value.items as Array<any>).map(AssetResponseDtoToJSON)),
        'total': value.total,
    };
}

