/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DownloadArchiveInfo } from './DownloadArchiveInfo';
import {
    DownloadArchiveInfoFromJSON,
    DownloadArchiveInfoFromJSONTyped,
    DownloadArchiveInfoToJSON,
} from './DownloadArchiveInfo';

/**
 * 
 * @export
 * @interface DownloadResponseDto
 */
export interface DownloadResponseDto {
    /**
     * 
     * @type {Array<DownloadArchiveInfo>}
     * @memberof DownloadResponseDto
     */
    archives: Array<DownloadArchiveInfo>;
    /**
     * 
     * @type {number}
     * @memberof DownloadResponseDto
     */
    totalSize: number;
}

/**
 * Check if a given object implements the DownloadResponseDto interface.
 */
export function instanceOfDownloadResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "archives" in value;
    isInstance = isInstance && "totalSize" in value;

    return isInstance;
}

export function DownloadResponseDtoFromJSON(json: any): DownloadResponseDto {
    return DownloadResponseDtoFromJSONTyped(json, false);
}

export function DownloadResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'archives': ((json['archives'] as Array<any>).map(DownloadArchiveInfoFromJSON)),
        'totalSize': json['totalSize'],
    };
}

export function DownloadResponseDtoToJSON(value?: DownloadResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'archives': ((value.archives as Array<any>).map(DownloadArchiveInfoToJSON)),
        'totalSize': value.totalSize,
    };
}

