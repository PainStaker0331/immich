/* tslint:disable */
/* eslint-disable */
/**
 * Immich
 * Immich API
 *
 * The version of the OpenAPI document: 1.94.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BulkIdResponseDto
 */
export interface BulkIdResponseDto {
    /**
     * 
     * @type {string}
     * @memberof BulkIdResponseDto
     */
    error?: BulkIdResponseDtoErrorEnum;
    /**
     * 
     * @type {string}
     * @memberof BulkIdResponseDto
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof BulkIdResponseDto
     */
    success: boolean;
}


/**
 * @export
 */
export const BulkIdResponseDtoErrorEnum = {
    Duplicate: 'duplicate',
    NoPermission: 'no_permission',
    NotFound: 'not_found',
    Unknown: 'unknown'
} as const;
export type BulkIdResponseDtoErrorEnum = typeof BulkIdResponseDtoErrorEnum[keyof typeof BulkIdResponseDtoErrorEnum];


/**
 * Check if a given object implements the BulkIdResponseDto interface.
 */
export function instanceOfBulkIdResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "success" in value;

    return isInstance;
}

export function BulkIdResponseDtoFromJSON(json: any): BulkIdResponseDto {
    return BulkIdResponseDtoFromJSONTyped(json, false);
}

export function BulkIdResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkIdResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': !exists(json, 'error') ? undefined : json['error'],
        'id': json['id'],
        'success': json['success'],
    };
}

export function BulkIdResponseDtoToJSON(value?: BulkIdResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': value.error,
        'id': value.id,
        'success': value.success,
    };
}

